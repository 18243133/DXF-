#ifndef __PHAPI_H__
#define __PHAPI_H__

#define DEVICE_SHOST_NAME L"ph"
#define DEVICE_NAME (L"\\Device\\" DEVICE_SHOST_NAME)
#define SYMBOLIC_LINK_SHORT_NAME L"link_ph"
#define SYMBOLIC_LINK_NAME (L"\\DosDevices\\" SYMBOLIC_LINK_SHORT_NAME)
//#define KPH_DEVICE_TYPE 0x9999


#define KPH_CTL_CODE(x) CTL_CODE(FILE_DEVICE_UNKNOWN, 0x800 + x, METHOD_NEITHER, FILE_ANY_ACCESS)


//#define OPENPROCESS KPH_CTL_CODE(50) // L1/L2 protected API

#define READ_VIRTUAL_MEMORY KPH_CTL_CODE(1)
#define WRITE_VIRTUAL_MEMORY KPH_CTL_CODE(2)
#define GET_PROCESS_ID KPH_CTL_CODE(3)
#define Get_PROCESS_BASE_ADDRESS KPH_CTL_CODE(4)

typedef struct _KERNEL_READ_REQUEST
{
	ULONG ProcessId;

	ULONG Address;
	ULONG Response;
	ULONG Size;

} KERNEL_READ_REQUEST, *PKERNEL_READ_REQUEST;

typedef struct _KERNEL_WRITE_REQUEST
{
	ULONG ProcessId;

	ULONG Address;
	ULONG Value;
	ULONG Size;

} KERNEL_WRITE_REQUEST, *PKERNEL_WRITE_REQUEST;

#endif // !__PHAPI_H__

